{"version":3,"sources":["component/Header.tsx","component/Step1.tsx","component/Step2.tsx","component/Step3.tsx","component/Step4.tsx","component/Step5.tsx","component/Step6.tsx","component/Stepper.tsx","component/Button/index.tsx","component/TextField/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","title","color","fontSize","fontWeight","marginTop","cardBlock","card","marginBottom","width","hashTagSocialCard","description","Header","props","classes","showCard","Grid","container","item","xs","sm","md","lg","xl","src","alt","Typography","className","spacing","alignItems","checkBoxBlock","checkbox","protectionContinueBlock","garantProtection","Step1","AppContext","Consumer","setStep","variant","fullWidth","placeholder","FormControlLabel","control","Checkbox","label","onClick","timer","Step2","Step3","Step4","select","MenuItem","Step5","tickBlock","height","backgroundColor","txtSend","txtFollowInstruct","txtOtherCard","imgOtherCard","borderRadius","txtOtherCardHashTagTitle","txtOtherCardDesc","premium","padding","Step6","direction","justify","percent","textAlign","Stepper","children","step","style","BccButton","withStyles","root","textTransform","opacity","Button","BccTextField","TextField","React","createContext","App","useState","Provider","value","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","ReactDOM","render","ThemeProvider","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2e53c652.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Grid, Typography, Card } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      color: \"#000D1A\",\r\n      fontSize: 28,\r\n      fontWeight: \"bold\",\r\n      marginTop: 60,\r\n    },\r\n    cardBlock: {\r\n      marginTop: 32,\r\n    },\r\n    card: {\r\n      marginBottom: 60,\r\n      width: \"100%\",\r\n    },\r\n    hashTagSocialCard: {\r\n      fontSize: 16,\r\n      color: \"#000D1A\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    description: {\r\n      fontSize: 14,\r\n      color: \"#000D1A\",\r\n    },\r\n  })\r\n);\r\n\r\nconst Header = (props: { showCard: boolean }) => {\r\n  const classes = useStyles();\r\n  const { showCard } = props;\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <img src=\"logo-bcc.svg\" alt=\"logo\" />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Typography className={classes.title}>Заявка на карту</Typography>\r\n      </Grid>\r\n      {showCard && (\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <Grid container spacing={4} className={classes.cardBlock}>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <img\r\n                src=\"socialCard.svg\"\r\n                alt=\"socialCard\"\r\n                className={classes.card}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography className={classes.hashTagSocialCard}>\r\n                    #socialCard\r\n                  </Typography>\r\n                  <Typography className={classes.description}>\r\n                    Для получений соц.пособий\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppContext } from \"../App\";\r\nimport { Button, TextField } from \".\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    checkBoxBlock: {\r\n      marginTop: 34,\r\n    },\r\n    checkbox: {\r\n      fontSize: 16,\r\n      color: \"#000000\",\r\n    },\r\n    protectionContinueBlock: {\r\n      marginTop: 45,\r\n    },\r\n    garantProtection: {\r\n      fontSize: 14,\r\n      color: \"#000000\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const Step1 = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ setStep }) => (\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <TextField variant=\"outlined\" fullWidth={true} placeholder=\"ИИН\" />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth={true}\r\n              placeholder=\"Номер телефона\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <FormControlLabel\r\n              className={classes.checkBoxBlock}\r\n              control={<Checkbox color=\"primary\" />}\r\n              label={\r\n                <Typography className={classes.checkbox}>\r\n                  Я согласен(а) на сбор и обработку персональных данных\r\n                </Typography>\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Grid container className={classes.protectionContinueBlock}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Grid container spacing={2}>\r\n                  <Grid\r\n                    item\r\n                    xs={false}\r\n                    sm={false}\r\n                    md={false}\r\n                    lg={false}\r\n                    xl={false}\r\n                  >\r\n                    <img src=\"protection.svg\" alt=\"protection\" />\r\n                  </Grid>\r\n                  <Grid item xs={true} sm={true} md={true} lg={true} xl={true}>\r\n                    <Typography className={classes.garantProtection}>\r\n                      Мы гарантируем безопасность и сохранность ваших данных\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Button fullWidth={true} onClick={() => setStep(1)}>\r\n                  Продолжить\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Step1;\r\n","import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppContext } from \"../App\";\r\nimport { TextField } from \".\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    timer: {\r\n      fontSize: 16,\r\n      color: \"#000D1A\",\r\n      marginTop: 24,\r\n    },\r\n  })\r\n);\r\n\r\nconst Step2 = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ setStep }) => (\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth={true}\r\n              placeholder=\"Код подтверждения\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Typography className={classes.timer}>\r\n              Отправить повторно СМС через 00:44\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Step2;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppContext } from \"../App\";\r\nimport { TextField } from \".\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst Step3 = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ setStep }) => (\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <TextField variant=\"outlined\" fullWidth={true} placeholder=\"ФИО\" />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <TextField variant=\"outlined\" fullWidth={true} placeholder=\"Имя\" />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth={true}\r\n              placeholder=\"Отчество\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth={true}\r\n              placeholder=\"Дата рождения\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Step3;\r\n","import React from \"react\";\r\nimport { Grid, Button, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppContext } from \"../App\";\r\nimport { TextField } from \".\";\r\n\r\nconst Step4 = () => {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth={true}\r\n          placeholder=\"Тип документа\"\r\n          select\r\n        >\r\n          <MenuItem></MenuItem>\r\n        </TextField>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            placeholder=\"Номер документа\"\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n            placeholder=\"Кем выдан\"\r\n            select\r\n          >\r\n            <MenuItem></MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n              <TextField\r\n                placeholder=\"Дата выдачи\"\r\n                variant=\"outlined\"\r\n                fullWidth={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n              <TextField\r\n                placeholder=\"Дата истечение\"\r\n                variant=\"outlined\"\r\n                fullWidth={true}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Step4;\r\n","import React from \"react\";\r\nimport { Grid, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppContext } from \"../App\";\r\nimport { TextField } from \".\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst Step5 = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ setStep }) => (\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <TextField\r\n              placeholder=\"Область\"\r\n              variant=\"outlined\"\r\n              fullWidth={true}\r\n              select\r\n            >\r\n              <MenuItem></MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <TextField\r\n              placeholder=\"Город/Село\"\r\n              variant=\"outlined\"\r\n              fullWidth={true}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  placeholder=\"Улица\"\r\n                  variant=\"outlined\"\r\n                  fullWidth={true}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n                <TextField\r\n                  placeholder=\"Дом\"\r\n                  variant=\"outlined\"\r\n                  fullWidth={true}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n                <TextField\r\n                  placeholder=\"Квартира\"\r\n                  variant=\"outlined\"\r\n                  fullWidth={true}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Step5;\r\n","import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    tickBlock: {\r\n      marginTop: 40,\r\n      height: 250,\r\n      backgroundColor: \"rgba(125, 206, 160, 0.1)\",\r\n    },\r\n    txtSend: {\r\n      fontSize: 18,\r\n      color: \"#1F7042\",\r\n      fontWeight: \"bold\",\r\n      marginTop: 24,\r\n    },\r\n    txtFollowInstruct: {\r\n      fontSize: 16,\r\n      color: \"#1F7042\",\r\n      marginTop: 16,\r\n    },\r\n    txtOtherCard: {\r\n      fontSize: 22,\r\n      fontWeight: \"bold\",\r\n      marginTop: 40,\r\n      marginBottom: 30,\r\n    },\r\n    imgOtherCard: {\r\n      width: \"100%\",\r\n      borderRadius: 8,\r\n      marginBottom: 12,\r\n    },\r\n    txtOtherCardHashTagTitle: {\r\n      fontSize: 18,\r\n      fontWeight: \"bold\",\r\n      color: \"#000D1A\",\r\n      marginBottom: 12,\r\n      marginTop: 8,\r\n    },\r\n    txtOtherCardDesc: {\r\n      fontSize: 16,\r\n      color: \"#4D565F\",\r\n      marginTop: 12,\r\n    },\r\n    premium: {\r\n      backgroundColor: \"#000D1A\",\r\n      color: \"#FFFFFF\",\r\n      fontSize: 12,\r\n      padding: \"8px 16px\",\r\n      borderRadius: 4,\r\n    },\r\n  })\r\n);\r\n\r\nconst Step6 = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Grid\r\n          container\r\n          className={classes.tickBlock}\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <img src=\"tick.svg\" alt=\"tick\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography className={classes.txtSend}>\r\n              Заявка успешно отправлена\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography className={classes.txtFollowInstruct}>\r\n              Следуйте инструкции, которые мы отправили по СМС\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Typography className={classes.txtOtherCard}>\r\n          Посмотрите на наши другие карты\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Grid container spacing={8}>\r\n          <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <img\r\n                  src=\"ironcard.svg\"\r\n                  alt=\"ironcard\"\r\n                  className={classes.imgOtherCard}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container>\r\n                  <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                    <Typography className={classes.txtOtherCardHashTagTitle}>\r\n                      #IRonCard\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                    <Grid container justify=\"flex-end\">\r\n                      <span className={classes.premium}>Премиум</span>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Typography className={classes.txtOtherCardDesc}>\r\n                  Первая бесконтактная металлическая карта\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <img\r\n                  src=\"kartakarta.svg\"\r\n                  alt=\"kartakarta\"\r\n                  className={classes.imgOtherCard}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Typography className={classes.txtOtherCardHashTagTitle}>\r\n                  #картакарта\r\n                </Typography>\r\n                <Typography className={classes.txtOtherCardDesc}>\r\n                  Кэшбэк до 30%{\" \"}\r\n                </Typography>\r\n                <Typography className={classes.txtOtherCardDesc}>\r\n                  Кредитный лимит до 3 млн. ₸.\r\n                </Typography>\r\n                <Typography className={classes.txtOtherCardDesc}>\r\n                  Рассрочка до 12 мес.\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Step6;\r\n","import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Swipe from \"react-swipeable-views\";\r\nimport { AppContext } from \"../App\";\r\nimport { Button } from \".\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      fontSize: 16,\r\n      color: \"#4D565F\",\r\n    },\r\n    percent: {\r\n      backgroundColor: \"#E0E0E0\",\r\n      borderRadius: 4,\r\n      textAlign: \"center\",\r\n    },\r\n  })\r\n);\r\nconst Stepper = (props: {\r\n  title: string;\r\n  percent: number;\r\n  step: number;\r\n  children: React.ReactNode;\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const { title, children, percent, step } = props;\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ setStep }) => (\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Typography className={classes.title}>{title}</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Typography className={classes.percent}>{`${percent}%`}</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            {children}\r\n          </Grid>\r\n          {step !== 1 && (\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <Button\r\n                style={{ marginTop: 24 }}\r\n                fullWidth={true}\r\n                onClick={() => setStep(step)}\r\n              >\r\n                Подтвердить\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Stepper;\r\n","import React from \"react\";\r\nimport { withStyles, Button } from \"@material-ui/core\";\r\n\r\nexport const BccButton = withStyles({\r\n  root: {\r\n    fontSize: 18,\r\n    color: \"white\",\r\n    height: 60,\r\n    backgroundColor: \"#27AE60\",\r\n    textTransform: \"none\",\r\n    \"&:hover, &:active\": {\r\n      backgroundColor: \"#27AE60\",\r\n      opacity: 0.8,\r\n    },\r\n  },\r\n})(Button);\r\n\r\nexport default BccButton;\r\n","import React from \"react\";\r\nimport { withStyles, TextField } from \"@material-ui/core\";\r\n\r\nconst BccTextField = withStyles({\r\n  root: {\r\n    marginTop: 24,\r\n  },\r\n})(TextField);\r\n\r\nexport default BccTextField;\r\n","import React, { useState } from \"react\";\nimport {\n  Header,\n  Step1,\n  Step2,\n  Stepper,\n  Step3,\n  Step4,\n  Step5,\n  Step6,\n} from \"./component\";\nimport \"./App.css\";\n\nexport const AppContext = React.createContext({\n  setStep: (step: number) => {},\n});\n\nfunction App() {\n  const [step, setStep] = useState(0);\n\n  return (\n    <AppContext.Provider value={{ setStep }}>\n      <div>\n        <Header showCard={step !== 5} />\n        {step === 0 && (\n          <Stepper title=\"Шаг 1: Заполнение данных\" percent={0} step={1}>\n            <Step1 />\n          </Stepper>\n        )}\n        {step === 1 && (\n          <Stepper title=\"Шаг 2: Подтверждение номера\" percent={0} step={2}>\n            <Step2 />\n          </Stepper>\n        )}\n        {step === 2 && (\n          <Stepper title=\"Шаг 3: Заполнение личных данных\" percent={0} step={3}>\n            <Step3 />\n          </Stepper>\n        )}\n        {step === 3 && (\n          <Stepper title=\"Шаг 3: Заполнение личных данных\" percent={0} step={4}>\n            <Step4 />\n          </Stepper>\n        )}\n        {step === 4 && (\n          <Stepper title=\"Шаг 3: Заполнение личных данных\" percent={0} step={5}>\n            <Step5 />\n          </Stepper>\n        )}\n        {step === 5 && <Step6 />}\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#27AE60\" },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}