{"version":3,"sources":["component/Header.tsx","api/axios.ts","api/AuthOtpController.ts","api/CamundaController.ts","api/ReferenceController.ts","api/KatoController.ts","api/Api.ts","component/Step1.tsx","component/Step2.tsx","component/Step3.tsx","component/Step4.tsx","component/Step5.tsx","component/Step6.tsx","component/Stepper.tsx","component/Button/index.tsx","component/TextField/index.tsx","component/PhoneNumber/index.tsx","component/DatePicker/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","title","color","fontSize","fontWeight","marginTop","cardBlock","card","marginBottom","width","hashTagSocialCard","description","Header","props","classes","showCard","Grid","container","item","xs","sm","md","lg","xl","src","alt","Typography","className","spacing","alignItems","webConfigEnv","window","env","server","axios","interceptors","response","use","error","status","localStorage","refreshToken","jwtToken","tokenData","accessToken","post","SERVER_URL","then","data","ok","setItem","tokens","JSON","stringify","user","config","headers","Authorization","request","url","userContext","parse","getItem","token","baseURL","get","r","delete","head","put","patch","AuthOtpController","OTP_URL","GREEN_API","CamundaController","variables","processDefinitionKey","ReferenceController","KatoController","te","api","authOtp","camunda","reference","kato","checkBoxBlock","checkbox","protectionContinueBlock","garantProtection","Step1","useState","agreement","setAgreement","AppContext","Consumer","model","setStep","changeModel","setOpenError","setLoading","onSubmit","e","showError","preventDefault","sendOtp","iin","phone","phoneNumber","removeItem","catch","variant","fullWidth","label","maxLength","isNumeric","value","onChange","g","s","target","required","inputProps","pattern","PhoneNumber","onChangeValue","FormControlLabel","control","Checkbox","type","timer","linkReSendSms","textDecoration","cursor","opacity","Step2","setTimer","otp","setOtp","React","useEffect","timeOut","setInterval","clearInterval","confirmOtp","onClick","onReSend","style","Step3","lastName","toUpperCase","firstName","middleName","birthDate","date","format","identityTypes","name","Step4","select","SelectProps","native","identity","map","m","number","issue","issueDate","expireDate","Step5","regions","setRegions","districts","setDistricts","villages","setVillages","getRegions","start","client","address","region","code","find","rus_name","district","village","getKatoChildren","cities","changeRegion","changeDistrict","length","street","house","flat","tickBlock","height","backgroundColor","txtSend","txtFollowInstruct","textAlign","txtOtherCard","imgOtherCard","borderRadius","txtOtherCardHashTagTitle","txtOtherCardDesc","premium","padding","Step6","direction","justify","divProgress","position","progress","top","left","zIndex","progressCount","Stepper","children","percent","step","LinearProgress","BccButton","withStyles","root","textTransform","Button","border","overflow","boxSizing","transition","transitions","create","focused","disabled","useStyles2","NumberFormatCustom","inputRef","allowLeadingZeros","other","getInputRef","onValueChange","values","isNumericString","BccInputText","classes2","shrink","InputProps","others","TextField","InputLabelProps","disableUnderline","inputComponent","undefined","TextMaskCustom","ref","inputElement","mask","placeholder","BccPhoneInputText","onChangeProviderCode","replace","substr","onChangeCorrected","moment","locale","datePickerTheme","createMuiTheme","overrides","MuiPickersToolbar","toolbar","green","MuiPickersCalendarHeader","switchHeader","MuiPickersDay","day","daySelected","dayDisabled","current","MuiPickersYear","year","yearSelected","yearDisabled","MuiPickersModal","dialogAction","useDatePickerStyles","margin","lineHeight","useLabelStyles","useAdornmentStyles","BccDatePicker","datePickerClasses","labelClasses","adornmentClasses","libInstance","utils","MomentUtils","ThemeProvider","autoOk","paddingTop","invalidDateMessage","minDateMessage","inputVariant","KeyboardButtonProps","InputAdornmentProps","createContext","getProp","setProp","open","loading","Alert","elevation","App","setModel","openError","isLoading","handleClose","Helmet","charSet","rel","href","content","property","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","tag","blocking","Provider","iassign","Boolean","location","hostname","match","palette","primary","main","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.c1499baf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Grid, Typography, Card } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      color: \"#000D1A\",\r\n      fontSize: 28,\r\n      fontWeight: \"bold\",\r\n      marginTop: 60,\r\n    },\r\n    cardBlock: {\r\n      marginTop: 32,\r\n    },\r\n    card: {\r\n      marginBottom: 60,\r\n      width: \"100%\",\r\n    },\r\n    hashTagSocialCard: {\r\n      fontSize: 16,\r\n      color: \"#000D1A\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    description: {\r\n      fontSize: 14,\r\n      color: \"#000D1A\",\r\n    },\r\n  })\r\n);\r\n\r\nconst Header = (props: { showCard: boolean }) => {\r\n  const classes = useStyles();\r\n  const { showCard } = props;\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <img src=\"logo-bcc.svg\" alt=\"logo\" />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Typography className={classes.title}>Заявка на карту</Typography>\r\n      </Grid>\r\n      {showCard && (\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <Grid container spacing={4} className={classes.cardBlock}>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <img\r\n                src=\"socialCard.svg\"\r\n                alt=\"socialCard\"\r\n                className={classes.card}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography className={classes.hashTagSocialCard}>\r\n                    #socialcard\r\n                  </Typography>\r\n                  <Typography className={classes.description}>\r\n                    Для получения соц.пособий\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst webConfigEnv = (window as any).env;\r\n\r\nexport class Server {\r\n  constructor() {\r\n    axios.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        if (error.response?.status === 401) {\r\n          if (localStorage.refreshToken && localStorage.jwtToken) {\r\n            const tokenData = {\r\n              accessToken: localStorage.jwtToken,\r\n              refreshToken: localStorage.refreshToken,\r\n            };\r\n            this.post(`${webConfigEnv.SERVER_URL}/auth/refreshToken`, tokenData)\r\n              .then((data: any) => {\r\n                if (data.ok) {\r\n                  localStorage.setItem(\"jwtToken\", data.tokens.accessToken);\r\n                  localStorage.setItem(\r\n                    \"refreshToken\",\r\n                    data.tokens.refreshToken\r\n                  );\r\n                  localStorage.setItem(\"userInfo\", JSON.stringify(data.user));\r\n                }\r\n              })\r\n              .then(() => {\r\n                const config = error.config;\r\n                config.headers = {\r\n                  Authorization: \"Bearer \" + localStorage.jwtToken,\r\n                };\r\n                axios.request(config);\r\n              });\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public request(config: any) {\r\n    return axios.request(config);\r\n  }\r\n  public get(url: string, config = {} as any): any {\r\n    config = config || {};\r\n    config.headers = config.headers || {};\r\n    var userContext = JSON.parse(localStorage.getItem(\"userContext\") || \"{}\");\r\n    config.headers.Authorization =\r\n      \"Bearer \" + (userContext.token || {}).accessToken;\r\n    config.baseURL = config.baseURL || webConfigEnv.SERVER_URL;\r\n    return axios.get(url, config).then((r) => r?.data);\r\n  }\r\n  public delete(url: string, config = {} as any): any {\r\n    config = config || {};\r\n    config.headers = config.headers || {};\r\n    var userContext = JSON.parse(localStorage.getItem(\"userContext\") || \"{}\");\r\n    config.headers.Authorization =\r\n      \"Bearer \" + (userContext.token || {}).accessToken;\r\n    config.baseURL = config.baseURL || webConfigEnv.SERVER_URL;\r\n    return axios.delete(url, config).then((r) => r.data);\r\n  }\r\n  public head(url: string, config = {} as any): any {\r\n    config = config || {};\r\n    config.headers = config.headers || {};\r\n    var userContext = JSON.parse(localStorage.getItem(\"userContext\") || \"{}\");\r\n    config.headers.Authorization =\r\n      \"Bearer \" + (userContext.token || {}).accessToken;\r\n    config.baseURL = webConfigEnv.SERVER_URL;\r\n    return axios.head(url, config);\r\n  }\r\n  public token(url: string, data: any, config = {} as any) {\r\n    config.baseURL = webConfigEnv.SERVER_URL;\r\n    return axios.post(url, data, config).then((r) => r.data);\r\n  }\r\n\r\n  public post(url: string, data: any, config = {} as any): any {\r\n    config = config || {};\r\n    config.headers = config.headers || {};\r\n    var userContext = JSON.parse(localStorage.getItem(\"userContext\") || \"{}\");\r\n    if (!!(userContext.token || {}).accessToken) {\r\n      config.headers.Authorization =\r\n        \"Bearer \" + (userContext.token || {}).accessToken;\r\n    }\r\n    config.baseURL = config.baseURL || webConfigEnv.SERVER_URL;\r\n    return axios.post(url, data, config).then((r) => r.data);\r\n  }\r\n  public put(url: string, data: any, config = {} as any): any {\r\n    config = config || {};\r\n    config.headers = config.headers || {};\r\n    var userContext = JSON.parse(localStorage.getItem(\"userContext\") || \"{}\");\r\n    config.headers.Authorization =\r\n      \"Bearer \" + (userContext.token || {}).accessToken;\r\n    config.baseURL = webConfigEnv.SERVER_URL;\r\n    return axios.put(url, data, config).then((r) => r.data);\r\n  }\r\n  public patch(url: string, data: any, config = {} as any): any {\r\n    config = config || {};\r\n    config.headers = config.headers || {};\r\n    var userContext = JSON.parse(localStorage.getItem(\"userContext\") || \"{}\");\r\n    config.headers.Authorization =\r\n      \"Bearer \" + (userContext.token || {}).accessToken;\r\n    config.baseURL = webConfigEnv.SERVER_URL;\r\n    return axios.patch(url, data, config).then((r) => r.data);\r\n  }\r\n}\r\nexport const server = new Server();\r\n","import { server } from \"./axios\";\r\n\r\nconst webConfigEnv = (window as any).env;\r\n\r\nexport interface OtpRequest {\r\n  iin?: string;\r\n  phone?: string;\r\n  otp?: string;\r\n}\r\n\r\nexport class UserContext {\r\n  token?: Token;\r\n}\r\n\r\nexport class Token {\r\n  accessToken?: string;\r\n  refreshToken?: string;\r\n}\r\n\r\nexport class AuthOtpController {\r\n  async sendOtp(request?: OtpRequest): Promise<any> {\r\n    return await server.post(\r\n      `/hotspot/sendOtp`,\r\n      {\r\n        ...request,\r\n      },\r\n      {\r\n        baseURL: webConfigEnv.OTP_URL,\r\n      }\r\n    );\r\n  }\r\n\r\n  async confirmOtp(request?: OtpRequest): Promise<UserContext> {\r\n    return await server.post(\r\n      `/camunda/auth/login/public`,\r\n      {\r\n        ...request,\r\n      },\r\n      {\r\n        baseURL: webConfigEnv.GREEN_API,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { server } from \"./axios\";\r\n\r\nconst webConfigEnv = (window as any).env;\r\n\r\nexport class CamundaController {\r\n  async start(variables: any): Promise<any> {\r\n    return server.post(\r\n      `/camunda/process/start`,\r\n      {\r\n        processDefinitionKey: \"social_card\",\r\n        variables,\r\n      },\r\n      {\r\n        baseURL: webConfigEnv.GREEN_API,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { server } from \"./axios\";\r\n\r\nconst webConfigEnv = (window as any).env;\r\n\r\nexport interface CodeName {\r\n  code?: string;\r\n  name?: string;\r\n  description?: string;\r\n}\r\n\r\nexport class ReferenceController {\r\n  async getIdentityTypes(): Promise<CodeName[]> {\r\n    return server.get(`/reference/api/generic/Id`, {\r\n      baseURL: webConfigEnv.GREEN_API,\r\n    });\r\n  }\r\n}\r\n","import { server } from \"./axios\";\r\n\r\nconst webConfigEnv = (window as any).env;\r\n\r\nexport interface KatoBaseModel {\r\n  districts?: KatoModel[];\r\n  cities?: KatoModel[];\r\n  villages?: KatoModel[];\r\n}\r\n\r\nexport class KatoModel {\r\n  constructor() {\r\n    this.te = \"\";\r\n    this.ab = \"\";\r\n    this.cd = \"\";\r\n    this.ef = \"\";\r\n    this.hij = \"\";\r\n    this.index = \"\";\r\n    this.k = \"\";\r\n    this.kaz_name = \"\";\r\n    this.rus_name = \"\";\r\n  }\r\n\r\n  te?: string;\r\n  ab?: string;\r\n  cd?: string;\r\n  ef?: string;\r\n  hij?: string;\r\n  index?: string;\r\n  k?: string;\r\n  kaz_name?: string;\r\n  rus_name?: string;\r\n}\r\n\r\nexport class KatoController {\r\n  async getRegions(): Promise<KatoModel[]> {\r\n    return await server.get(`/reference/api/kato/regions`, {\r\n      baseURL: webConfigEnv.GREEN_API,\r\n    });\r\n  }\r\n\r\n  async getKatoChildren(te?: string): Promise<KatoBaseModel> {\r\n    return await server.get(`/reference/api/kato/children/new/${te}`, {\r\n      baseURL: webConfigEnv.GREEN_API,\r\n    });\r\n  }\r\n}\r\n","import { AuthOtpController } from \"./AuthOtpController\";\r\nimport { CamundaController } from \"./CamundaController\";\r\nimport { ReferenceController } from \"./ReferenceController\";\r\nimport { KatoController } from \"./KatoController\";\r\n\r\nexport class Api {\r\n  authOtp = new AuthOtpController();\r\n  camunda = new CamundaController();\r\n  reference = new ReferenceController();\r\n  kato = new KatoController();\r\n}\r\n\r\nexport const api = new Api();\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppContext } from \"../App\";\r\nimport { Button, TextField, PhoneNumber } from \".\";\r\nimport { api } from \"./../api/Api\";\r\nimport { BaseModel } from \"../api/model/BaseModel\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    checkBoxBlock: {\r\n      marginTop: 34,\r\n    },\r\n    checkbox: {\r\n      fontSize: 16,\r\n      color: \"#000000\",\r\n    },\r\n    protectionContinueBlock: {\r\n      marginTop: 45,\r\n    },\r\n    garantProtection: {\r\n      fontSize: 14,\r\n      color: \"#000000\",\r\n      marginBottom: 24,\r\n    },\r\n  })\r\n);\r\n\r\nexport const Step1 = () => {\r\n  const classes = useStyles();\r\n\r\n  const [agreement, setAgreement] = useState(false);\r\n\r\n  const onSubmit = (\r\n    e: any,\r\n    model: BaseModel,\r\n    setStep: (step: number) => void,\r\n    showError: (open: boolean) => void,\r\n    setLoading: (loading: boolean) => void\r\n  ) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    api.authOtp\r\n      .sendOtp({ iin: model.iin, phone: model.phoneNumber })\r\n      .then(() => {\r\n        localStorage.removeItem(\"userContext\");\r\n        setLoading(false);\r\n        setStep(1);\r\n      })\r\n      .catch((e: any) => {\r\n        setLoading(false);\r\n        showError(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ model, setStep, changeModel, setOpenError, setLoading }) => (\r\n        <form\r\n          onSubmit={(e: any) =>\r\n            onSubmit(e, model, setStep, setOpenError, setLoading)\r\n          }\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                fullWidth={true}\r\n                label=\"ИИН\"\r\n                maxLength={12}\r\n                isNumeric={true}\r\n                value={model.iin}\r\n                onChange={(e: any) =>\r\n                  changeModel(\r\n                    (g) => g.iin,\r\n                    (s) => e.target.value\r\n                  )\r\n                }\r\n                required\r\n                inputProps={{\r\n                  pattern: \"\\\\d{12}\",\r\n                  title: \"Формат должен состоят из 12 цифр\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <PhoneNumber\r\n                variant=\"filled\"\r\n                fullWidth={true}\r\n                label=\"Номер телефона\"\r\n                value={model.phoneNumber}\r\n                onChangeValue={(value: string) =>\r\n                  changeModel(\r\n                    (g) => g.phoneNumber,\r\n                    (s) => value\r\n                  )\r\n                }\r\n                required\r\n                inputProps={{\r\n                  pattern: \"^[+][7]\\\\s[(]\\\\d{3}[)]\\\\s\\\\d{3}\\\\s\\\\d{2}\\\\s\\\\d{2}$\",\r\n                  title: \"Поле должно быть формата +7 (111) 111 11 11\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <FormControlLabel\r\n                className={classes.checkBoxBlock}\r\n                control={\r\n                  <Checkbox\r\n                    value={agreement}\r\n                    onChange={() => setAgreement(!agreement)}\r\n                    color=\"primary\"\r\n                    required\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography className={classes.checkbox}>\r\n                    Я согласен(а) на сбор и обработку персональных данных\r\n                  </Typography>\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <Grid container className={classes.protectionContinueBlock}>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid\r\n                      item\r\n                      xs={false}\r\n                      sm={false}\r\n                      md={false}\r\n                      lg={false}\r\n                      xl={false}\r\n                    >\r\n                      <img src=\"protection.svg\" alt=\"protection\" />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      xs={true}\r\n                      sm={true}\r\n                      md={true}\r\n                      lg={true}\r\n                      xl={true}\r\n                    >\r\n                      <Typography className={classes.garantProtection}>\r\n                        Мы гарантируем безопасность и сохранность ваших данных\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                  <Button fullWidth={true} type=\"submit\">\r\n                    Продолжить\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Step1;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppContext } from \"../App\";\r\nimport { TextField, Button } from \".\";\r\nimport { api } from \"./../api/Api\";\r\nimport { BaseModel } from \"../api/model/BaseModel\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    timer: {\r\n      fontSize: 16,\r\n      color: \"#000D1A\",\r\n      marginTop: 24,\r\n    },\r\n    linkReSendSms: {\r\n      marginTop: 24,\r\n      color: \"#536dfe\",\r\n      textDecoration: \"underline\",\r\n      fontSize: 18,\r\n      fontWeight: \"bold\",\r\n      cursor: \"pointer\",\r\n      \"&:hover, &:active\": {\r\n        color: \"#536dfe\",\r\n        opacity: 0.8,\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Step2 = () => {\r\n  const classes = useStyles();\r\n\r\n  const [timer, setTimer] = useState(90);\r\n  const [otp, setOtp] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    let timeOut = setInterval(() => {\r\n      if (timer !== 0) {\r\n        setTimer(timer - 1);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timeOut);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [timer]);\r\n\r\n  const onSubmit = (\r\n    e: any,\r\n    model: BaseModel,\r\n    setStep: (step: number) => void,\r\n    showError: (open: boolean) => void,\r\n    setLoading: (loading: boolean) => void\r\n  ) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    api.authOtp\r\n      .confirmOtp({\r\n        iin: model.iin,\r\n        phone: model.phoneNumber,\r\n        otp,\r\n      })\r\n      .then((userContext) => {\r\n        setLoading(false);\r\n        localStorage.setItem(\"userContext\", JSON.stringify(userContext));\r\n        setStep(2);\r\n      })\r\n      .catch((e: any) => {\r\n        setLoading(false);\r\n        showError(true);\r\n      });\r\n  };\r\n\r\n  const onReSend = (\r\n    model: BaseModel,\r\n    showError: (open: boolean) => void,\r\n    setLoading: (loading: boolean) => void\r\n  ) => {\r\n    setLoading(true);\r\n    api.authOtp\r\n      .sendOtp({ iin: model.iin, phone: model.phoneNumber })\r\n      .then(() => {\r\n        setLoading(false);\r\n        setTimer(90);\r\n        setOtp(\"\");\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        showError(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ model, setStep, changeModel, setOpenError, setLoading }) => (\r\n        <form\r\n          onSubmit={(e: any) =>\r\n            onSubmit(e, model, setStep, setOpenError, setLoading)\r\n          }\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                isNumeric={true}\r\n                maxLength={6}\r\n                fullWidth={true}\r\n                label=\"Код подтверждения\"\r\n                required\r\n                inputProps={{\r\n                  pattern: \"\\\\d{6}\",\r\n                  title: \"Формат должен состоят из 6 цифр\",\r\n                }}\r\n                value={otp}\r\n                onChange={(e: any) => setOtp(e.target.value)}\r\n              />\r\n            </Grid>\r\n            {timer !== 0 ? (\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Typography className={classes.timer}>\r\n                  Отправить повторно СМС через: {timer}\r\n                </Typography>\r\n              </Grid>\r\n            ) : (\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Typography\r\n                  className={classes.linkReSendSms}\r\n                  onClick={() => onReSend(model, setOpenError, setLoading)}\r\n                >\r\n                  Отправить повторно СМС\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <Button style={{ marginTop: 24 }} fullWidth={true} type=\"submit\">\r\n                Подтвердить\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Step2;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppContext } from \"../App\";\r\nimport { TextField, Button, DatePicker } from \".\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst Step3 = () => {\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = (e: any, setStep: (step: number) => void) => {\r\n    e.preventDefault();\r\n    setStep(3);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ model, changeModel, setStep }) => (\r\n        <form onSubmit={(e: any) => onSubmit(e, setStep)}>\r\n          <Grid container>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                fullWidth={true}\r\n                label=\"Фамилия\"\r\n                value={model.lastName?.toUpperCase()}\r\n                onChange={(e: any) =>\r\n                  changeModel(\r\n                    (g) => g.lastName,\r\n                    (s) => e.target.value.toUpperCase()\r\n                  )\r\n                }\r\n                required\r\n                inputProps={{\r\n                  pattern: \"[a-zA-Z\\u0400-\\u04ff]{2,30}\",\r\n                  title:\r\n                    \"Формат должен состоят только из букв Кириллицы или Латиницы длиной не менее 2 букв\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                fullWidth={true}\r\n                label=\"Имя\"\r\n                value={model.firstName?.toUpperCase()}\r\n                onChange={(e: any) =>\r\n                  changeModel(\r\n                    (g) => g.firstName,\r\n                    (s) => e.target.value.toUpperCase()\r\n                  )\r\n                }\r\n                required\r\n                inputProps={{\r\n                  pattern: \"[a-zA-Z\\u0400-\\u04ff]{2,30}\",\r\n                  title:\r\n                    \"Формат должен состоят только из букв Кириллицы или Латиницы длиной не менее 2 букв\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                fullWidth={true}\r\n                label=\"Отчество\"\r\n                value={model.middleName?.toUpperCase()}\r\n                onChange={(e: any) =>\r\n                  changeModel(\r\n                    (g) => g.middleName,\r\n                    (s) => e.target.value.toUpperCase()\r\n                  )\r\n                }\r\n                inputProps={{\r\n                  pattern: \"[a-zA-Z\\u0400-\\u04ff]{2,30}\",\r\n                  title:\r\n                    \"Формат должен состоят только из букв Кириллицы или Латиницы длиной не менее 2 букв\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <DatePicker\r\n                value={model.birthDate || null}\r\n                required\r\n                inputProps={{\r\n                  pattern:\r\n                    \"(0[1-9]|1[0-9]|2[0-9]|3[01]).(0[1-9]|1[012]).[0-9]{4}\",\r\n                  title: \"Дата должна быть в формате дд.мм.гггг\",\r\n                }}\r\n                onChange={(date) =>\r\n                  changeModel(\r\n                    (g) => g.birthDate,\r\n                    (s) => date?.format(\"MM/DD/YYYY\")\r\n                  )\r\n                }\r\n                label=\"Дата рождения\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <Button style={{ marginTop: 24 }} fullWidth={true} type=\"submit\">\r\n                Подтвердить\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Step3;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppContext } from \"../App\";\r\nimport { TextField, Button, DatePicker } from \".\";\r\nimport { api } from \"./../api/Api\";\r\nimport { CodeName } from \"./../api/ReferenceController\";\r\n\r\nconst identityTypes = [\r\n  {\r\n    name: \"Паспорт гражданина Республики Казахстан\",\r\n    description: \"Паспорт гражданина Республики Казахстан\",\r\n  },\r\n  {\r\n    name: \"Удостоверение личности гражданина Республки Казахстан\",\r\n    description: \"Удостоверение личности гражданина Республики Казахстан\",\r\n  },\r\n];\r\n\r\nconst Step4 = () => {\r\n  const onSubmit = (e: any, setStep: (step: number) => void) => {\r\n    e.preventDefault();\r\n    setStep(4);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ model, changeModel, setStep }) => (\r\n        <form onSubmit={(e: any) => onSubmit(e, setStep)}>\r\n          <Grid container>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                fullWidth={true}\r\n                label=\"Тип документа\"\r\n                select\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                value={model.identity?.type || \"\"}\r\n                onChange={(e: any) =>\r\n                  changeModel(\r\n                    (g) => g.identity?.type,\r\n                    (s) => e.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <option></option>\r\n                {identityTypes?.map((m) => (\r\n                  <option value={m.name}>{m.description}</option>\r\n                ))}\r\n              </TextField>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <TextField\r\n                  label=\"Номер документа\"\r\n                  variant=\"filled\"\r\n                  fullWidth={true}\r\n                  isNumeric={true}\r\n                  value={model.identity?.number}\r\n                  onChange={(e: any) =>\r\n                    changeModel(\r\n                      (g) => g.identity?.number,\r\n                      (s) => e.target.value\r\n                    )\r\n                  }\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  fullWidth={true}\r\n                  label=\"Кем выдан\"\r\n                  value={model.identity?.issue?.toUpperCase()}\r\n                  onChange={(e: any) =>\r\n                    changeModel(\r\n                      (g) => g.identity?.issue,\r\n                      (s) => e.target.value?.toUpperCase()\r\n                    )\r\n                  }\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                    <DatePicker\r\n                      value={model.identity?.issueDate || null}\r\n                      required\r\n                      inputProps={{\r\n                        pattern:\r\n                          \"(0[1-9]|1[0-9]|2[0-9]|3[01]).(0[1-9]|1[012]).[0-9]{4}\",\r\n                        title: \"Дата должна быть в формате дд.мм.гггг\",\r\n                      }}\r\n                      onChange={(date) =>\r\n                        changeModel(\r\n                          (g) => g.identity?.issueDate,\r\n                          (s) => date?.format(\"MM/DD/YYYY\")\r\n                        )\r\n                      }\r\n                      label=\"Дата выдачи\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                    <DatePicker\r\n                      value={model.identity?.expireDate || null}\r\n                      required\r\n                      inputProps={{\r\n                        pattern:\r\n                          \"(0[1-9]|1[0-9]|2[0-9]|3[01]).(0[1-9]|1[012]).[0-9]{4}\",\r\n                        title: \"Дата должна быть в формате дд.мм.гггг\",\r\n                      }}\r\n                      onChange={(date) =>\r\n                        changeModel(\r\n                          (g) => g.identity?.expireDate,\r\n                          (s) => date?.format(\"MM/DD/YYYY\")\r\n                        )\r\n                      }\r\n                      label=\"Дата истечения\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <Button style={{ marginTop: 24 }} fullWidth={true} type=\"submit\">\r\n                Подтвердить\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Step4;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppContext } from \"../App\";\r\nimport { TextField, Button } from \".\";\r\nimport { BaseModel, Address } from \"../api/model/BaseModel\";\r\nimport { api } from \"./../api/Api\";\r\nimport { KatoModel } from \"../api/KatoController\";\r\nimport { CodeName } from \"../api/ReferenceController\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst Step5 = () => {\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = (\r\n    e: any,\r\n    model: BaseModel,\r\n    setStep: (step: number) => void,\r\n    showError: (open: boolean) => void,\r\n    setLoading: (loading: boolean) => void\r\n  ) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    api.camunda\r\n      .start({ client: model })\r\n      .then(() => {\r\n        setLoading(false);\r\n        setStep(5);\r\n      })\r\n      .catch((e: any) => {\r\n        setLoading(false);\r\n        showError(true);\r\n      });\r\n  };\r\n\r\n  const [regions, setRegions] = useState([] as KatoModel[]);\r\n  const [districts, setDistricts] = useState([] as KatoModel[]);\r\n  const [villages, setVillages] = useState([] as KatoModel[]);\r\n\r\n  useEffect(() => {\r\n    api.kato.getRegions().then((m) => setRegions(m));\r\n  }, []);\r\n\r\n  const changeRegion = (\r\n    e: any,\r\n    changeModel: (\r\n      getProp: (g: BaseModel) => any,\r\n      setProp: (s: any) => any\r\n    ) => void\r\n  ) => {\r\n    const r = regions?.find((m) => m.te === e.target.value);\r\n\r\n    changeModel(\r\n      (g) => g.address,\r\n      (s: Address) => {\r\n        s.region = { code: r?.te, name: r?.rus_name };\r\n        s.district = { code: \"\", name: \"\" };\r\n        s.village = \"\";\r\n        return s;\r\n      }\r\n    );\r\n\r\n    api.kato\r\n      .getKatoChildren(e.target.value)\r\n      .then((m) => {\r\n        setDistricts(m.districts || []);\r\n        setVillages([...(m.cities || []), ...(m.villages || [])]);\r\n      })\r\n      .catch((e) => {});\r\n  };\r\n\r\n  const changeDistrict = (\r\n    e: any,\r\n    changeModel: (\r\n      getProp: (g: BaseModel) => any,\r\n      setProp: (s: any) => any\r\n    ) => void\r\n  ) => {\r\n    const r = districts?.find((m) => m.te === e.target.value);\r\n\r\n    changeModel(\r\n      (g) => g.address,\r\n      (s: Address) => {\r\n        s.district = { code: r?.te, name: r?.rus_name };\r\n        s.village = \"\";\r\n        return s;\r\n      }\r\n    );\r\n\r\n    api.kato.getKatoChildren(e.target.value).then((m) => {\r\n      setVillages([...(m.cities || []), ...(m.villages || [])]);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ model, changeModel, setStep, setOpenError, setLoading }) => (\r\n        <form\r\n          onSubmit={(e: any) =>\r\n            onSubmit(e, model, setStep, setOpenError, setLoading)\r\n          }\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <TextField\r\n                label=\"Область\"\r\n                variant=\"filled\"\r\n                fullWidth={true}\r\n                select\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                value={model.address?.region?.code}\r\n                onChange={(e: any) => changeRegion(e, changeModel)}\r\n                required\r\n              >\r\n                <option></option>\r\n                {regions?.map((m) => (\r\n                  <option value={m.te}>{m.rus_name}</option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <TextField\r\n                label=\"Район\"\r\n                variant=\"filled\"\r\n                fullWidth={true}\r\n                select\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                value={model.address?.district?.code}\r\n                onChange={(e: any) => changeDistrict(e, changeModel)}\r\n                required={districts.length > 0 && !model.address?.village}\r\n              >\r\n                <option></option>\r\n                {districts?.map((m) => (\r\n                  <option value={m.te}>{m.rus_name}</option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <TextField\r\n                label=\"Город/Село\"\r\n                variant=\"filled\"\r\n                fullWidth={true}\r\n                select\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                value={model.address?.village}\r\n                onChange={(e: any) =>\r\n                  changeModel(\r\n                    (g) => g.address?.village,\r\n                    (s) => e.target.value\r\n                  )\r\n                }\r\n                required={villages.length > 0}\r\n              >\r\n                <option></option>\r\n                {villages?.map((m) => (\r\n                  <option value={m.rus_name}>{m.rus_name}</option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                  <TextField\r\n                    label=\"Улица\"\r\n                    variant=\"filled\"\r\n                    fullWidth={true}\r\n                    value={model.address?.street?.toUpperCase()}\r\n                    onChange={(e: any) =>\r\n                      changeModel(\r\n                        (g) => g.address?.street,\r\n                        (s) => e.target.value.toUpperCase()\r\n                      )\r\n                    }\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} sm={6} md={3} lg={3} xl={3}>\r\n                  <TextField\r\n                    label=\"Дом\"\r\n                    variant=\"filled\"\r\n                    fullWidth={true}\r\n                    value={model.address?.house?.toUpperCase()}\r\n                    onChange={(e: any) =>\r\n                      changeModel(\r\n                        (g) => g.address?.house,\r\n                        (s) => e.target.value.toUpperCase()\r\n                      )\r\n                    }\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6} sm={6} md={3} lg={3} xl={3}>\r\n                  <TextField\r\n                    label=\"Квартира\"\r\n                    variant=\"filled\"\r\n                    fullWidth={true}\r\n                    value={model.address?.flat?.toUpperCase()}\r\n                    onChange={(e: any) =>\r\n                      changeModel(\r\n                        (g) => g.address?.flat,\r\n                        (s) => e.target.value.toUpperCase()\r\n                      )\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n              <Button style={{ marginTop: 24 }} fullWidth={true} type=\"submit\">\r\n                Подтвердить\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Step5;\r\n","import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    tickBlock: {\r\n      marginTop: 40,\r\n      height: 250,\r\n      backgroundColor: \"rgba(125, 206, 160, 0.1)\",\r\n    },\r\n    txtSend: {\r\n      fontSize: 18,\r\n      color: \"#1F7042\",\r\n      fontWeight: \"bold\",\r\n      marginTop: 24,\r\n    },\r\n    txtFollowInstruct: {\r\n      fontSize: 16,\r\n      color: \"#1F7042\",\r\n      marginTop: 16,\r\n      textAlign: \"center\",\r\n    },\r\n    txtOtherCard: {\r\n      fontSize: 22,\r\n      fontWeight: \"bold\",\r\n      marginTop: 40,\r\n      marginBottom: 30,\r\n    },\r\n    imgOtherCard: {\r\n      width: \"100%\",\r\n      borderRadius: 8,\r\n      marginBottom: 12,\r\n    },\r\n    txtOtherCardHashTagTitle: {\r\n      fontSize: 18,\r\n      fontWeight: \"bold\",\r\n      color: \"#000D1A\",\r\n      marginBottom: 12,\r\n      marginTop: 8,\r\n    },\r\n    txtOtherCardDesc: {\r\n      fontSize: 16,\r\n      color: \"#4D565F\",\r\n      marginTop: 12,\r\n    },\r\n    premium: {\r\n      backgroundColor: \"#000D1A\",\r\n      color: \"#FFFFFF\",\r\n      fontSize: 12,\r\n      padding: \"8px 16px\",\r\n      borderRadius: 4,\r\n    },\r\n  })\r\n);\r\n\r\nconst Step6 = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Grid\r\n          container\r\n          className={classes.tickBlock}\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <img src=\"tick.svg\" alt=\"tick\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography className={classes.txtSend}>\r\n              Заявка успешно отправлена\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography className={classes.txtFollowInstruct}>\r\n              Следуйте инструкции, которые мы отправили по СМС\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Typography className={classes.txtOtherCard}>\r\n          Посмотрите на наши другие карты\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Grid container spacing={8}>\r\n          <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <img\r\n                  src=\"ironcard.svg\"\r\n                  alt=\"ironcard\"\r\n                  className={classes.imgOtherCard}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container>\r\n                  <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                    <Typography className={classes.txtOtherCardHashTagTitle}>\r\n                      #IRonCard\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                    <Grid container justify=\"flex-end\">\r\n                      <span className={classes.premium}>Премиум</span>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Typography className={classes.txtOtherCardDesc}>\r\n                  Первая бесконтактная металлическая карта\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <img\r\n                  src=\"kartakarta.svg\"\r\n                  alt=\"kartakarta\"\r\n                  className={classes.imgOtherCard}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Typography className={classes.txtOtherCardHashTagTitle}>\r\n                  #картакарта\r\n                </Typography>\r\n                <Typography className={classes.txtOtherCardDesc}>\r\n                  Кэшбэк до 30%{\" \"}\r\n                </Typography>\r\n                <Typography className={classes.txtOtherCardDesc}>\r\n                  Кредитный лимит до 3 млн. ₸.\r\n                </Typography>\r\n                <Typography className={classes.txtOtherCardDesc}>\r\n                  Рассрочка до 12 мес.\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Step6;\r\n","import React from \"react\";\r\nimport { Grid, Typography, LinearProgress } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { AppContext } from \"../App\";\r\nimport { Button } from \".\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      fontSize: 16,\r\n      color: \"#4D565F\",\r\n    },\r\n    divProgress: {\r\n      position: \"relative\",\r\n      marginBottom: 24,\r\n    },\r\n    progress: {\r\n      top: 0,\r\n      left: 0,\r\n      height: 22,\r\n      width: \"100%\",\r\n      borderRadius: 2,\r\n      position: \"absolute\",\r\n      zIndex: 1569,\r\n    },\r\n    progressCount: {\r\n      top: 0,\r\n      left: 0,\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n      color: \"white\",\r\n      zIndex: 1600,\r\n      fontSize: 15,\r\n    },\r\n  })\r\n);\r\nconst Stepper = (props: {\r\n  title: string;\r\n  percent: number;\r\n  step: number;\r\n  children: React.ReactNode;\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const { title, children, percent, step } = props;\r\n\r\n  const onSubmit = () => {};\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ setStep }) => (\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <Typography className={classes.title}>{title}</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <div className={classes.divProgress}>\r\n              <LinearProgress\r\n                className={classes.progress}\r\n                variant=\"determinate\"\r\n                color=\"primary\"\r\n                value={percent}\r\n              />\r\n              <Typography\r\n                className={classes.progressCount}\r\n              >{`${percent}%`}</Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            {children}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Stepper;\r\n","import React from \"react\";\r\nimport { withStyles, Button } from \"@material-ui/core\";\r\n\r\nexport const BccButton = withStyles({\r\n  root: {\r\n    fontSize: 18,\r\n    color: \"white\",\r\n    height: 60,\r\n    backgroundColor: \"#27AE60\",\r\n    textTransform: \"none\",\r\n    \"&:hover, &:active\": {\r\n      backgroundColor: \"#27AE60\",\r\n      opacity: 0.8,\r\n    },\r\n  },\r\n})(Button);\r\n\r\nexport default BccButton;\r\n","import React from \"react\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\r\nimport { OutlinedInputProps } from \"@material-ui/core/OutlinedInput\";\r\nimport { InputLabelProps } from \"@material-ui/core/InputLabel\";\r\nimport NumberFormat, { NumberFormatProps } from \"react-number-format\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"56px\",\r\n      border: \"1px solid #E8E8E8\",\r\n      overflow: \"hidden\",\r\n      borderRadius: 3,\r\n      backgroundColor: \"#FFFFFF\",\r\n      boxSizing: \"border-box\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n      \"&$focused\": {\r\n        backgroundColor: \"#fff\",\r\n        border: \"2px solid #1F7042\",\r\n      },\r\n      \"& label.Mui-focused\": {\r\n        color: \"green\",\r\n      },\r\n    },\r\n    focused: {},\r\n    disabled: {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#8B98A7\",\r\n    },\r\n  })\r\n);\r\n\r\nconst useStyles2 = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginBottom: \"1px\",\r\n    },\r\n  })\r\n);\r\n\r\ndeclare module \"react-number-format\" {\r\n  interface NumberFormatProps {\r\n    allowLeadingZeros?: boolean;\r\n  }\r\n}\r\n\r\ninterface NumberFormatCustomProps extends NumberFormatProps {\r\n  inputRef: (instance: NumberFormat | null) => void;\r\n  onChange: (event: { target: { value: string } }) => void;\r\n}\r\n\r\nconst NumberFormatCustom = (props: NumberFormatCustomProps) => {\r\n  const { inputRef, allowLeadingZeros, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n      allowLeadingZeros\r\n    />\r\n  );\r\n};\r\n\r\nconst BccInputText = (\r\n  props: TextFieldProps & {\r\n    isNumeric?: boolean;\r\n    maxLength?: number;\r\n    shrink?: boolean;\r\n    allowLeadingZeros?: boolean;\r\n  }\r\n) => {\r\n  const classes = useStyles({});\r\n  const classes2 = useStyles2({});\r\n\r\n  const {\r\n    isNumeric,\r\n    maxLength,\r\n    shrink,\r\n    inputProps,\r\n    InputProps,\r\n    ...others\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      {...others}\r\n      style={{ height: \"56px\", marginTop: 24 }}\r\n      inputProps={{\r\n        ...inputProps,\r\n        maxLength,\r\n      }}\r\n      InputLabelProps={\r\n        {\r\n          classes: classes2,\r\n          required: false,\r\n          shrink: shrink,\r\n        } as Partial<InputLabelProps>\r\n      }\r\n      InputProps={\r\n        {\r\n          ...(InputProps as Partial<OutlinedInputProps>),\r\n          classes,\r\n          disableUnderline: true,\r\n          inputComponent: isNumeric ? (NumberFormatCustom as any) : undefined,\r\n        } as Partial<OutlinedInputProps>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default BccInputText;\r\n","import React from \"react\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\r\nimport { OutlinedInputProps } from \"@material-ui/core/OutlinedInput\";\r\nimport { InputLabelProps } from \"@material-ui/core/InputLabel\";\r\nimport MaskedInput from \"react-maskedinput\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"56px\",\r\n      border: \"1px solid #E8E8E8\",\r\n      overflow: \"hidden\",\r\n      borderRadius: 2,\r\n      backgroundColor: \"#FFFFFF\",\r\n      boxSizing: \"border-box\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n      \"&$focused\": {\r\n        backgroundColor: \"#fff\",\r\n        border: \"2px solid #1F7042\",\r\n      },\r\n      \"& label.Mui-focused\": {\r\n        color: \"green\",\r\n      },\r\n      \"& label\": {\r\n        color: \"red\",\r\n      },\r\n    },\r\n    focused: {},\r\n    disabled: {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#8B98A7\",\r\n    },\r\n  })\r\n);\r\n\r\nconst useStyles2 = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginBottom: \"1px\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface TextMaskCustomProps {\r\n  inputRef: (ref: HTMLInputElement | null) => void;\r\n}\r\n\r\nconst TextMaskCustom = (props: TextMaskCustomProps) => {\r\n  const { inputRef, ...other } = props;\r\n\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={(ref: any) => {\r\n        inputRef(ref ? ref.inputElement : null);\r\n      }}\r\n      mask=\"+7 (111) 111 11 11\"\r\n      placeholder={\"+7 (707) 707 77 77\"}\r\n    />\r\n  );\r\n};\r\n\r\nconst BccPhoneInputText = (\r\n  props: TextFieldProps & {\r\n    onChangeValue?: (value: string) => void;\r\n    onChangeProviderCode?: (value: string) => void;\r\n  }\r\n) => {\r\n  const classes = useStyles({});\r\n  const classes2 = useStyles2({});\r\n  const {\r\n    value,\r\n    onChangeValue,\r\n    onChangeProviderCode,\r\n    onChange,\r\n    inputProps,\r\n    ...others\r\n  } = props;\r\n\r\n  const onChangeCorrected = (value: string) => {\r\n    if (!!onChangeValue) {\r\n      value = value.replace(/ /g, \"\").replace(\"(\", \"\").replace(\")\", \"\");\r\n      onChangeValue(value);\r\n      if (!!onChangeProviderCode) {\r\n        if (value.length >= 5) {\r\n          onChangeProviderCode(value.substr(2, 3));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      value={value}\r\n      style={{ height: \"56px\", marginTop: 24 }}\r\n      InputLabelProps={\r\n        {\r\n          shrink: !!value || undefined,\r\n          classes: classes2,\r\n          required: false,\r\n        } as Partial<InputLabelProps>\r\n      }\r\n      onChange={(e: any) => {\r\n        if (!!onChange) {\r\n          onChange(e);\r\n        }\r\n        onChangeCorrected(e.target.value);\r\n      }}\r\n      InputProps={\r\n        {\r\n          classes,\r\n          disableUnderline: true,\r\n          inputComponent: TextMaskCustom as any,\r\n        } as Partial<OutlinedInputProps>\r\n      }\r\n      inputProps={{\r\n        ...inputProps,\r\n        pattern: \"^[+][7]\\\\s[(]\\\\d{3}[)]\\\\s\\\\d{3}\\\\s\\\\d{2}\\\\s\\\\d{2}$\",\r\n        title: \"Поле должно быть формата +7 (111) 111 11 11\",\r\n      }}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BccPhoneInputText;\r\n","import MomentUtils from \"@date-io/moment\";\r\nimport { createMuiTheme, InputAdornmentProps } from \"@material-ui/core\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport { InputLabelProps } from \"@material-ui/core/InputLabel\";\r\nimport { OutlinedInputProps } from \"@material-ui/core/OutlinedInput\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  KeyboardDatePickerProps,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nimport React from \"react\";\r\n\r\nmoment.locale(\"ru\");\r\n\r\nconst datePickerTheme = (createMuiTheme as any)({\r\n  overrides: {\r\n    MuiPickersToolbar: {\r\n      toolbar: {\r\n        backgroundColor: green[\"800\"],\r\n      },\r\n    },\r\n    MuiPickersCalendarHeader: {\r\n      switchHeader: {},\r\n    },\r\n    MuiPickersDay: {\r\n      day: {\r\n        color: green[\"800\"],\r\n      },\r\n      daySelected: {\r\n        backgroundColor: green[\"400\"],\r\n      },\r\n      dayDisabled: {\r\n        color: green[\"100\"],\r\n      },\r\n      current: {\r\n        color: green[\"900\"],\r\n      },\r\n    },\r\n    MuiPickersYear: {\r\n      year: {\r\n        color: green[\"800\"],\r\n      },\r\n      yearSelected: {\r\n        backgroundColor: green[\"400\"],\r\n      },\r\n      yearDisabled: {\r\n        color: green[\"100\"],\r\n      },\r\n      current: {\r\n        color: green[\"900\"],\r\n      },\r\n    },\r\n    MuiPickersModal: {\r\n      dialogAction: {\r\n        color: green[\"800\"],\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: \"1px solid #E8E8E8\",\r\n      overflow: \"hidden\",\r\n      borderRadius: 2,\r\n      backgroundColor: \"#FFFFFF\",\r\n      boxSizing: \"border-box\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      \"&:hover:not($disabled)\": {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n      \"&$focused\": {\r\n        backgroundColor: \"#fff\",\r\n        border: \"2px solid #1F7042\",\r\n      },\r\n      \"&$disabled\": {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n      \"& label.Mui-focused\": {\r\n        color: \"green\",\r\n      },\r\n    },\r\n    focused: {},\r\n    disabled: {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#8B98A7\",\r\n    },\r\n  })\r\n);\r\n\r\nconst useDatePickerStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: 0,\r\n      lineHeight: \"20px\",\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\nconst useLabelStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginBottom: 1,\r\n    },\r\n  })\r\n);\r\n\r\nconst useAdornmentStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {},\r\n  })\r\n);\r\n\r\nconst BccDatePicker = (props: KeyboardDatePickerProps) => {\r\n  const classes = useStyles({});\r\n  const datePickerClasses = useDatePickerStyles({});\r\n  const labelClasses = useLabelStyles({});\r\n  const adornmentClasses = useAdornmentStyles({});\r\n\r\n  const [locale] = React.useState(\"ru\");\r\n  return (\r\n    <div style={{ marginTop: 24 }}>\r\n      <MuiPickersUtilsProvider\r\n        libInstance={moment}\r\n        utils={MomentUtils}\r\n        locale={locale}\r\n      >\r\n        <ThemeProvider theme={datePickerTheme}>\r\n          <KeyboardDatePicker\r\n            autoOk\r\n            className={datePickerClasses.root}\r\n            inputProps={{ style: { paddingTop: 20 } }}\r\n            variant=\"inline\"\r\n            invalidDateMessage=\"Дата должна быть в формате дд.мм.гггг\"\r\n            minDateMessage=\"Дата не должна быть раньше минимальной даты (01.01.1900)\"\r\n            inputVariant=\"filled\"\r\n            format=\"DD.MM.YYYY\"\r\n            margin=\"normal\"\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n            InputProps={\r\n              {\r\n                classes,\r\n                disableUnderline: true,\r\n              } as Partial<OutlinedInputProps>\r\n            }\r\n            InputLabelProps={\r\n              {\r\n                classes: labelClasses,\r\n                required: false,\r\n              } as Partial<InputLabelProps>\r\n            }\r\n            InputAdornmentProps={\r\n              {\r\n                classes: adornmentClasses,\r\n              } as Partial<InputAdornmentProps>\r\n            }\r\n            {...props}\r\n          />\r\n        </ThemeProvider>\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BccDatePicker;\r\n","import React, { useState } from \"react\";\r\nimport iassign from \"immutable-assign\";\r\nimport {\r\n  Header,\r\n  Step1,\r\n  Step2,\r\n  Stepper,\r\n  Step3,\r\n  Step4,\r\n  Step5,\r\n  Step6,\r\n} from \"./component\";\r\nimport \"./App.css\";\r\nimport { BaseModel } from \"./api/model/BaseModel\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport { Alert as MuiAlert } from \"@material-ui/lab\";\r\nimport BlockUi from \"react-block-ui\";\r\nimport \"react-block-ui/style.css\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport const AppContext = React.createContext({\r\n  model: { identity: {}, address: {} } as BaseModel,\r\n  setStep: (step: number) => {},\r\n  changeModel: (getProp: (g: BaseModel) => any, setProp: (s: any) => any) => {},\r\n  setOpenError: (open: boolean) => {},\r\n  setLoading: (loading: boolean) => {},\r\n});\r\n\r\nconst Alert = (props: any) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nfunction App() {\r\n  const [step, setStep] = useState(5);\r\n  const [model, setModel] = useState({\r\n    identity: {},\r\n    address: {},\r\n  } as BaseModel);\r\n  const [openError, setOpenError] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const changeModel = (\r\n    getProp: (g: BaseModel) => any,\r\n    setProp: (s: any) => any\r\n  ) => {\r\n    setModel(iassign(model, getProp, setProp, null));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenError(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>#socialcard</title>\r\n        <meta charSet=\"utf-8\" />\r\n        <link rel=\"icon\" href=\"%PUBLIC_URL%/logo.png\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <meta name=\"theme-color\" content=\"#000000\" />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"#socialсard - Для получения соц.пособий\"\r\n        />\r\n        <meta\r\n          property=\"og:image\"\r\n          name=\"image\"\r\n          content=\"%PUBLIC_URL%/socialCard.svg\"\r\n        />\r\n        <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo.png\" />\r\n        <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\r\n        <script src=\"%PUBLIC_URL%/env.config.js\"></script>\r\n      </Helmet>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={openError}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          Возникла непредвиденная ошибка!\r\n        </Alert>\r\n      </Snackbar>\r\n      <BlockUi tag=\"div\" blocking={isLoading}>\r\n        <AppContext.Provider\r\n          value={{ model, setStep, changeModel, setOpenError, setLoading }}\r\n        >\r\n          <div>\r\n            <Header showCard={step !== 5} />\r\n            {step === 0 && (\r\n              <Stepper title=\"Шаг 1: Заполнение данных\" percent={0} step={1}>\r\n                <Step1 />\r\n              </Stepper>\r\n            )}\r\n            {step === 1 && (\r\n              <Stepper\r\n                title=\"Шаг 2: Подтверждение номера\"\r\n                percent={20}\r\n                step={2}\r\n              >\r\n                <Step2 />\r\n              </Stepper>\r\n            )}\r\n            {step === 2 && (\r\n              <Stepper\r\n                title=\"Шаг 3: Заполнение личных данных\"\r\n                percent={40}\r\n                step={3}\r\n              >\r\n                <Step3 />\r\n              </Stepper>\r\n            )}\r\n            {step === 3 && (\r\n              <Stepper\r\n                title=\"Шаг 4: Документ, удостверяющий личность\"\r\n                percent={60}\r\n                step={4}\r\n              >\r\n                <Step4 />\r\n              </Stepper>\r\n            )}\r\n            {step === 4 && (\r\n              <Stepper title=\"Шаг 5: Адреса\" percent={80} step={5}>\r\n                <Step5 />\r\n              </Stepper>\r\n            )}\r\n            {step === 5 && <Step6 />}\r\n          </div>\r\n        </AppContext.Provider>\r\n      </BlockUi>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#27AE60\" },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}